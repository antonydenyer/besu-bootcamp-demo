plugins {
    id 'idea'
    id 'org.jlleitschuh.gradle.ktlint' version '9.2.1'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'com.palantir.docker' version '0.28.0'
    id 'org.web3j' version '4.8.4'
    id 'org.web3j.solidity' version '0.3.2'
}

group 'net.consensys.besu.plugins'
version '1.0-SNAPSHOT'

web3j {
    generatedPackageName = 'org.allfunds.blockchain.besu.tests.acceptance.contracts'
}

sourceSets.main.solidity.srcDirs = [
        "$rootDir/contracts"
]

solidity {
    resolvePackages = false
}

ext {
    besuVersion = "21.7.3"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


repositories {
    mavenCentral()
    maven { url "https://hyperledger.jfrog.io/hyperledger/besu-maven" }
}

ktlint {
    verbose.set(true)
    outputToConsole.set(true)
    coloredOutput.set(true)
}

test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
}

dependencies {
    implementation "org.hyperledger.besu:plugin-api:$besuVersion"
    implementation("org.hyperledger.besu.internal:p2p:$besuVersion") {
        exclude group: "tech.pegasys.discovery"
    }
    implementation "com.google.auto.service:auto-service:1.+"

    implementation "org.apache.logging.log4j:log4j-api:2.14.0"
    implementation "org.apache.logging.log4j:log4j-core:2.14.0"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:2.14.0"

    testImplementation "org.web3j:core:5.+"
    testImplementation "org.testcontainers:testcontainers:1.16.+"
    testImplementation "org.testcontainers:junit-jupiter:1.16.+"
    testImplementation "org.junit.jupiter:junit-jupiter:5.+"
    testImplementation "org.assertj:assertj-core:3.18.1"

}

check.dependsOn ktlintCheck

docker {
    name "trusted-pool-plugin:$besuVersion"
    buildArgs([BESU_VERSION: "$besuVersion"])
    copySpec.from("$buildDir/libs/").into("plugins")
}
test {
    environment "BESU_VERSION", "$besuVersion"
}

compileTestJava.dependsOn("docker")
tasks.docker.mustRunAfter("shadowJar")
tasks.docker.dependsOn("shadowJar")
